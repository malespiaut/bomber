const DWORD WSDP_MAXPLAYERS=16;
const DWORD WSDP_MAXGROUPS=16;
const DWORD WSDP_BUFSIZE=8192;
const DWORD WSDP_MAXMSG=32;

struct WSDP_Player
{
	DPID dpId;
	SOCKADDR_IN addr;
	SOCKET tcp;
	DPNAME dpName;
	void* lpData;
	DWORD dwDataSize;
	BOOL local;
};

struct WSDP_Group
{
	DPID dpId;
	BOOL pl_in[WSDP_MAXPLAYERS];
};

class WSDPlay
{
public:
	WSDPlay();
	~WSDPlay();
	HRESULT AddPlayerToGroup(DPID,DPID);
	HRESULT Close();
	HRESULT CreateGroup(LPDPID,LPDPNAME,LPVOID,DWORD,DWORD);
	HRESULT CreatePlayer(LPDPID,LPDPNAME,HANDLE,LPVOID,DWORD,DWORD);
	HRESULT DestroyGroup(DPID);
	HRESULT DestroyPlayer(DPID);
	HRESULT EnumConnections(LPCGUID,LPDPENUMCONNECTIONSCALLBACK,LPVOID,DWORD);
	HRESULT EnumPlayers(LPGUID,LPDPENUMPLAYERSCALLBACK2,LPVOID,DWORD);
	HRESULT EnumSessions(LPDPSESSIONDESC2,DWORD,LPDPENUMSESSIONSCALLBACK2,LPVOID,DWORD);
	HRESULT GetCaps(LPDPCAPS,DWORD);
	HRESULT GetMessageCount(DPID,LPDWORD);
	HRESULT GetMessageQueue(DPID,DPID,DWORD,LPDWORD,LPDWORD);
	HRESULT GetPlayerData(DPID,LPVOID,LPDWORD,DWORD);
	HRESULT GetPlayerFlags(DPID,LPDWORD);
	HRESULT GetSessionDesc(LPVOID,LPDWORD);
	HRESULT InitializeConnection(LPVOID,DWORD);
	HRESULT Open(LPDPSESSIONDESC2,DWORD);
	HRESULT Receive(LPDPID,LPDPID,DWORD,LPVOID,LPDWORD);
	HRESULT Release();
	HRESULT SendChatMessage(DPID,DPID,DWORD,LPDPCHAT);
	HRESULT SendEx(DPID,DPID,DWORD,LPVOID,DWORD,DWORD,DWORD,LPVOID,LPDWORD);
	HRESULT SetPlayerData(DPID,LPVOID,DWORD,DWORD);
	HRESULT SetSessionDesc(LPDPSESSIONDESC2,DWORD);
	void Update(void);

private:
	SOCKET tcplisten;
	SOCKET udp;
	SOCKET tcp;
	WSDP_Player player[WSDP_MAXPLAYERS];
	WSDP_Group group[WSDP_MAXGROUPS];
	DWORD NumPlayers;
	DWORD NumGroups;
	DPSESSIONDESC2 dpDesc;
	BOOL IsHost;
	BYTE Queue[WSDP_BUFSIZE];
	DWORD MsgOffset[WSDP_MAXMSG];
	int NumMsg;
};
